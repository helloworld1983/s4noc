$timescale 1ps $end
$scope module Main $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 ) io_lc_din_valid $end
$var wire 1 , io_le_din_valid $end
$var wire 1 / io_dn_din_valid $end
$var wire 1 2 io_r_din_valid $end
$var wire 1 5 io_up_din_valid $end
$var wire 1 : io_lc_dout_valid $end
$var wire 1 < io_r_dout_valid $end
$var wire 1 > io_le_dout_valid $end
$var wire 1 @ io_up_dout_valid $end
$var wire 1 B io_dn_dout_valid $end
$var wire 32 Z io_lc_din_data $end
$var wire 32 ] io_le_din_data $end
$var wire 32 ` io_dn_din_data $end
$var wire 32 c io_r_din_data $end
$var wire 32 f io_up_din_data $end
$var wire 32 k io_lc_dout_data $end
$var wire 32 m io_r_dout_data $end
$var wire 32 o io_le_dout_data $end
$var wire 32 q io_up_dout_data $end
$var wire 32 s io_dn_dout_data $end
$scope module schedule_table $end
$var wire 3 C io_dir_rInfo_local $end
$var wire 3 F io_dir_rInfo_right $end
$var wire 3 I io_dir_rInfo_left $end
$var wire 3 L io_dir_rInfo_up $end
$var wire 3 O io_dir_rInfo_down $end
$var wire 16 S io_dir_slotCounter $end
$upscope $end
$scope module route $end
$var wire 1 # reset $end
$var wire 1 $ dout_local_valid $end
$var wire 1 % io_ready $end
$var wire 1 & dout_right_valid $end
$var wire 1 ' dout_left_valid $end
$var wire 1 ( dout_up_valid $end
$var wire 1 * io_lc_din_valid $end
$var wire 1 + din_local_valid $end
$var wire 1 - io_le_din_valid $end
$var wire 1 . din_left_valid $end
$var wire 1 0 io_dn_din_valid $end
$var wire 1 1 din_down_valid $end
$var wire 1 3 io_r_din_valid $end
$var wire 1 4 din_right_valid $end
$var wire 1 6 io_up_din_valid $end
$var wire 1 7 din_up_valid $end
$var wire 1 8 dout_down_valid $end
$var wire 1 9 io_lc_dout_valid $end
$var wire 1 ; io_r_dout_valid $end
$var wire 1 = io_le_dout_valid $end
$var wire 1 ? io_up_dout_valid $end
$var wire 1 A io_dn_dout_valid $end
$var wire 3 D io_routeInfo_rInfo_local $end
$var wire 3 E directions_local $end
$var wire 3 G io_routeInfo_rInfo_right $end
$var wire 3 H directions_right $end
$var wire 3 J io_routeInfo_rInfo_left $end
$var wire 3 K directions_left $end
$var wire 3 M io_routeInfo_rInfo_up $end
$var wire 3 N directions_up $end
$var wire 3 P io_routeInfo_rInfo_down $end
$var wire 3 Q directions_down $end
$var wire 16 R io_routeInfo_slotCounter $end
$var wire 19 T reg_slotCount $end
$var wire 32 U dout_local_data $end
$var wire 32 V io_test $end
$var wire 32 W dout_right_data $end
$var wire 32 X dout_left_data $end
$var wire 32 Y dout_up_data $end
$var wire 32 [ io_lc_din_data $end
$var wire 32 \ din_local_data $end
$var wire 32 ^ io_le_din_data $end
$var wire 32 _ din_left_data $end
$var wire 32 a io_dn_din_data $end
$var wire 32 b din_down_data $end
$var wire 32 d io_r_din_data $end
$var wire 32 e din_right_data $end
$var wire 32 g io_up_din_data $end
$var wire 32 h din_up_data $end
$var wire 32 i dout_down_data $end
$var wire 32 j io_lc_dout_data $end
$var wire 32 l io_r_dout_data $end
$var wire 32 n io_le_dout_data $end
$var wire 32 p io_up_dout_data $end
$var wire 32 r io_dn_dout_data $end
$upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
$end
#0
b1 !
b1 "
b1 #
b0 $
b0 %
b0 &
b0 '
b0 (
b0 )
b0 *
b0 +
b0 ,
b0 -
b0 .
b0 /
b0 0
b0 1
b0 2
b0 3
b0 4
b0 5
b0 6
b0 7
b0 8
b0 9
b0 :
b0 ;
b0 <
b0 =
b0 >
b0 ?
b0 @
b0 A
b0 B
b000 C
b000 D
b000 E
b000 F
b000 G
b000 H
b000 I
b000 J
b000 K
b001 L
b001 M
b000 N
b000 O
b000 P
b000 Q
b0000000000000000 R
b0000000000000000 S
b0000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00101101001111010111000000000000 Z
b00101101001111010111000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b11100100100110101101101010010000 `
b11100100100110101101101010010000 a
b00000000000000000000000000000000 b
b00101101001111000000010011010000 c
b00101101001111000000010011010000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000001 f
b00000000000000000000000000000001 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
#1
b0 !
#2
b1 !
b1 "
#3
b0 !
#4
b1 !
#5
b0 !
#6
b1 !
#7
b0 !
#8
b1 !
#9
b0 !
#10
b1 !
b0 "
b0 #
b0 )
b0 *
b0 ,
b0 -
b0 /
b0 0
b0 2
b0 3
b0 5
b0 6
b00000000000000000000000000000111 Z
b00000000000000000000000000000111 [
b00000000000000000000000000000110 ]
b00000000000000000000000000000110 ^
b00000000000000000000000000000100 `
b00000000000000000000000000000100 a
b00000000000000000000000000000101 c
b00000000000000000000000000000101 d
b00000000000000000000000000000011 f
b00000000000000000000000000000011 g
#11
b0 !
#12
b1 !
b001 F
b001 G
b010 L
b010 M
b001 N
b0000000000000001 R
b0000000000000001 S
b0000000000000000001 T
b00000000000000000000000000000001 V
b00000000000000000000000000000111 \
b00000000000000000000000000000110 _
b00000000000000000000000000000100 b
b00000000000000000000000000000101 e
b00000000000000000000000000000011 h
#13
b0 !
#14
b1 !
b010 F
b010 G
b001 H
b000 L
b000 M
b010 N
b011 O
b011 P
b0000000000000010 R
b0000000000000010 S
b0000000000000000010 T
b00000000000000000000000000000000 V
b00000000000000000000000000000111 Y
b00000000000000000000000000000111 p
b00000000000000000000000000000111 q
#15
b0 !
#16
b1 !
b101 C
b101 D
b011 F
b011 G
b010 H
b001 L
b001 M
b000 N
b000 O
b000 P
b011 Q
b0000000000000011 R
b0000000000000011 S
b0000000000000000011 T
b00000000000000000000000000000111 W
b00000000000000000000000000000100 Y
b00000000000000000000000000000111 l
b00000000000000000000000000000111 m
b00000000000000000000000000000100 p
b00000000000000000000000000000100 q
#17
b0 !
#18
b1 !
b011 C
b011 D
b101 E
b010 F
b010 G
b011 H
b001 N
b000 Q
b0000000000000100 R
b0000000000000100 S
b0000000000000000100 T
b00000000000000000000000000000001 V
b00000000000000000000000000000100 W
b00000000000000000000000000000000 Y
b00000000000000000000000000000110 i
b00000000000000000000000000000100 l
b00000000000000000000000000000100 m
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000110 r
b00000000000000000000000000000110 s
#19
b0 !
#20
b1 !
b000 C
b000 D
b011 E
b011 F
b011 G
b010 H
b001 I
b001 J
b010 L
b010 M
b0000000000000101 R
b0000000000000101 S
b0000000000000000101 T
b00000000000000000000000000000011 U
b00000000000000000000000000000110 W
b00000000000000000000000000000111 Y
b00000000000000000000000000000000 i
b00000000000000000000000000000011 j
b00000000000000000000000000000011 k
b00000000000000000000000000000110 l
b00000000000000000000000000000110 m
b00000000000000000000000000000111 p
b00000000000000000000000000000111 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
#21
b0 !
#22
b1 !
b011 C
b011 D
b000 E
b010 F
b010 G
b011 H
b000 I
b000 J
b001 K
b100 L
b100 M
b010 N
b0000000000000110 R
b0000000000000110 S
b0000000000000000110 T
b00000000000000000000000000000110 U
b00000000000000000000000000000000 V
b00000000000000000000000000000100 W
b00000000000000000000000000000110 j
b00000000000000000000000000000110 k
b00000000000000000000000000000100 l
b00000000000000000000000000000100 m
#23
b0 !
#24
b1 !
b011 E
b001 F
b001 G
b010 H
b000 K
b010 L
b010 M
b100 N
b0000000000000111 R
b0000000000000111 S
b0000000000000000111 T
b00000000000000000000000000000000 U
b00000000000000000000000000000110 W
b00000000000000000000000000000111 X
b00000000000000000000000000000100 Y
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000110 l
b00000000000000000000000000000110 m
b00000000000000000000000000000111 n
b00000000000000000000000000000111 o
b00000000000000000000000000000100 p
b00000000000000000000000000000100 q
#25
b0 !

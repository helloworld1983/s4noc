$timescale 1ps $end
$scope module router $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # io_lc_dout_valid $end
$var wire 1 $ io_ready $end
$var wire 1 % io_r_dout_valid $end
$var wire 1 & io_le_dout_valid $end
$var wire 1 ' io_up_dout_valid $end
$var wire 1 ( io_dn_dout_valid $end
$var wire 1 ) io_dn_din_valid $end
$var wire 1 * io_up_din_valid $end
$var wire 1 + io_le_din_valid $end
$var wire 1 , io_r_din_valid $end
$var wire 1 - io_qFull $end
$var wire 1 . io_lc_din_valid $end
$var wire 1 / io_ena $end
$var wire 3 0 io_routeInfo_rInfo_up $end
$var wire 3 1 directions_up $end
$var wire 3 2 io_routeInfo_rInfo_dc $end
$var wire 3 3 io_routeInfo_rInfo_local $end
$var wire 3 4 io_routeInfo_rInfo_left $end
$var wire 3 5 io_routeInfo_rInfo_down $end
$var wire 3 6 io_routeInfo_rInfo_right $end
$var wire 16 7 io_routeInfo_slotCounter $end
$var wire 19 8 reg_slotCount $end
$var wire 32 9 io_lc_dout_data $end
$var wire 32 : io_test $end
$var wire 32 ; io_r_dout_data $end
$var wire 32 < io_le_dout_data $end
$var wire 32 = io_up_dout_data $end
$var wire 32 > io_dn_dout_data $end
$var wire 32 ? io_dn_din_data $end
$var wire 32 @ io_up_din_data $end
$var wire 32 A io_le_din_data $end
$var wire 32 B io_r_din_data $end
$var wire 32 C io_addr $end
$var wire 32 D io_lc_din_data $end
$upscope $end
$enddefinitions $end
$dumpvars
$end
#0
b1 !
b1 "
b0 #
b0 $
b0 %
b0 &
b0 '
b0 (
b1 )
b0 *
b0 +
b0 ,
b1 -
b0 .
b0 /
b000 0
b000 1
b000 2
b000 3
b000 4
b001 5
b000 6
b0000000000000000 7
b0000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b11111110010111010100010011010000 ?
b11111111111111111111111111111111 @
b11111110101010111100111110110000 A
b00000000000000000000000000000000 B
b11111110011111010100010100100000 C
b01001011110100001010101110110000 D
#1
b0 !
#2
b1 !
b1 "
#3
b0 !
#4
b1 !
#5
b0 !
#6
b1 !
#7
b0 !
#8
b1 !
#9
b0 !
#10
b1 !
b0 "
b0 )
b0 +
b0 ,
b0 -
b0 .
b0 /
b000 0
b000 2
b000 3
b000 4
b000 5
b000 6
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
#11
b0 !
#12
b1 !
b0000000000000001 7
b0000000000000000001 8
#13
b0 !
#14
b1 !
b0000000000000010 7
b0000000000000000010 8
#15
b0 !
#16
b1 !
b0000000000000011 7
b0000000000000000011 8
#17
b0 !

$timescale 1ps $end
$scope module niQueue $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # io_ipNI_io_ip_rtw $end
$var wire 1 $ qt_3_valid $end
$var wire 1 % qt_2_valid $end
$var wire 1 & qt_1_valid $end
$var wire 1 ' qt_0_valid $end
$var wire 1 ( tx_dout_valid $end
$var wire 1 ) io_r_lc_dout_valid $end
$var wire 1 * io_ipNI_io_ip_ack $end
$var wire 1 + io_ipNI_io_ip_qtBusy $end
$var wire 1 , io_dir_read $end
$var wire 1 - io_ipNI_io_router_tx $end
$var wire 1 . valid $end
$var wire 2 / qtHead $end
$var wire 2 0 qtTail $end
$var wire 3 1 qtPhitCount $end
$var wire 4 2 io_dir_rdData_dst $end
$var wire 4 3 reg_dir_data_dst $end
$var wire 4 4 io_ipNI_io_ip_addr $end
$var wire 4 5 reg_tx_dst $end
$var wire 4 6 io_dir_rdData_src $end
$var wire 19 7 reg_slotCount $end
$var wire 20 8 io_dir_rdAddr $end
$var wire 32 9 io_ipNI_io_ip_din $end
$var wire 32 : qt_3_data $end
$var wire 32 ; qt_2_data $end
$var wire 32 < qt_1_data $end
$var wire 32 = qt_0_data $end
$var wire 32 > tx_dout_data $end
$var wire 32 ? io_r_lc_dout_data $end
$var wire 32 @ io_ipNI_io_ip_dout $end
$var wire 32 A data $end
$upscope $end
$enddefinitions $end
$dumpvars
$end
#0
b1 !
b1 "
b0 #
b0 $
b0 %
b0 &
b0 '
b0 (
b0 )
b0 *
b0 +
b1 ,
b0 -
b0 .
b00 /
b00 0
b000 1
b0001 2
b0000 3
b1000 4
b0000 5
b1000 6
b0000000000000000000 7
b00000000000000000000 8
b00000000000000000000000000000001 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000010000000001001001010001 A
#1
b0 !
#2
b1 !
b1 "
#3
b0 !
#4
b1 !
#5
b0 !
#6
b1 !
#7
b0 !
#8
b1 !
#9
b0 !
#10
b1 !
b0 "
b1 #
b0 .
b0000 2
b0101 4
b0000 6
b00000000000000000000000000000101 9
b00000000000000000000000000000000 A
#11
b0 !
#12
b1 !
b1 '
b01 0
b001 1
b0101 5
b0000000000000000001 7
b00000000000000000001 8
b00000000000000000000000000000100 9
b00000000000000000000000000000101 =
#13
b0 !
#14
b1 !
b1 &
b10 0
b010 1
b0000000000000000010 7
b00000000000000000010 8
b00000000000000000000000000000010 9
b00000000000000000000000000000100 <
#15
b0 !
#16
b1 !
b0 #
b1 %
b11 0
b011 1
b0101 2
b0000000000000000011 7
b00000000000000000011 8
b00000000000000000000000000000010 ;
#17
b0 !
#18
b1 !
b0101 3
b0010 4
b0000000000000000100 7
b00000000000000000100 8
#19
b0 !
#20
b1 !
b1 (
b1 )
b01 /
b010 1
b0101 4
b0010 5
b0000000000000000101 7
b00000000000000000101 8
b00000000000000000000000000000101 >
b00000000000000000000000000000101 ?
#21
b0 !
#22
b1 !
b0011 4
b0101 5
b0000000000000000110 7
b00000000000000000110 8
#23
b0 !
#24
b1 !
b10 /
b001 1
b0011 5
b0000000000000000111 7
b00000000000000000111 8
b00000000000000000000000000000100 >
b00000000000000000000000000000100 ?
#25
b0 !
#26
b1 !
b0000000000000001000 7
b00000000000000001000 8
#27
b0 !
#28
b1 !
b0000000000000001001 7
b00000000000000001001 8
#29
b0 !
